% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neural_logical_joins.R
\name{neural_anti_join}
\alias{neural_anti_join}
\alias{neural_inner_join}
\alias{neural_left_join}
\alias{neural_right_join}
\alias{neural_full_join}
\title{Fuzzy Neural joins}
\usage{
neural_anti_join(a, b, model, by = NULL, radius = 0.1, exhaustive = FALSE, ...)

neural_inner_join(
  a,
  b,
  model,
  by = NULL,
  radius = 0.1,
  exhaustive = FALSE,
  ...
)

neural_left_join(a, b, model, by = NULL, radius = 0.1, exhaustive = FALSE, ...)

neural_right_join(
  a,
  b,
  model,
  by = NULL,
  radius = 0.1,
  exhaustive = FALSE,
  ...
)

neural_full_join(a, b, model, by = NULL, radius = 0.1, exhaustive = FALSE, ...)
}
\arguments{
\item{a, b}{The two dataframes to join.}

\item{model}{a pointer to the ort inference session running the model used
to generate embeddings}

\item{by}{A named vector indicating which columns to join on. Format should
be the same as dplyr: \code{by = c("column_name_in_df_a" = "column_name_in_df_b")}, but two columns must be specified in each dataset
(x column and y column). Specification made with \code{dplyr::join_by()} are
also accepted.}

\item{radius}{(float) The cosine distance threshold below which two embeddings
should be considered a match (default is .1).}

\item{exhaustive}{(boolean) whether to perform an exhaustive
nearest-neighbor search to find matching observations. If set to FALSE (the
default), HNSW is used and only the 20-closest observations in dataframe a
are considered as possible matches to each observation in dataframe b. If
set to true, an exahstive match will be perfomed, which takes much more time to run.}

\item{...}{additional parameters to be passed to \code{generate_embeddings}}
}
\value{
A tibble fuzzily-joined on the basis of the variables in \code{by.} Tries
to adhere to the same standards as the dplyr-joins, and uses the same
logical joining patterns (i.e. inner-join joins and keeps only observations
in both datasets).
}
\description{
Fuzzy Neural joins
}
